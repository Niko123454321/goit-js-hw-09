{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAAAC,QAAQC,IAAI,mBAEZ,IAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,KAAMJ,SAASC,cAAc,cAgB/BH,EAAKM,KAAKC,iBAAiB,UAE3B,SAAiBC,G,kBAYb,IA3BmBC,EAAUR,EA2BzBS,EAAQC,OAAOP,EAAOQ,IA3BPH,EA8BLG,EA9BeX,EA8BZS,EA7BZ,IAAIG,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEL,WAAUR,UAEpBc,EAAO,CAAEN,WAAUR,S,GAEpBA,E,KAsBAmB,MAAK,SAAAC,GAAWA,EAARZ,S,IAAUR,EAAKoB,EAALpB,MACjBH,QAAQC,IAAI,uBAAiCuB,OAARV,EAAE,QAAYU,OAANrB,EAAM,OACnDsB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAiCH,OAARV,EAAE,QAAYU,OAANrB,EAAM,M,IAEhEyB,OAAM,SAAAL,G,IAAGM,EAACN,EAADM,EAAG1B,EAAKoB,EAALpB,MACXH,QAAQC,IAAI,sBAAgCuB,OAARK,EAAE,QAAYL,OAANrB,EAAM,OAClDsB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAA8BN,OAARK,EAAE,QAAYL,OAANrB,EAAM,M,KArBlEO,EAAIqB,iBAEQ7B,EAAKC,MAAM6B,MAQvB,IARA,IACI1B,EAAOJ,EAAKI,KAAK0B,MACjBzB,EAASL,EAAKK,OAAOyB,MAMhBC,EAAI,EAAGA,GAAK1B,EAAQ0B,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["console.log('faina_super_dog');\nimport Notiflix from 'notiflix';\nconst refs = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('form.form'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.form.addEventListener('submit', onStart);\n\nfunction onStart(evt) {\n  evt.preventDefault();\n\n  let delay = refs.delay.value;\n  let step = refs.step.value;\n  let amount = refs.amount.value;\n\n  // console.log('delay', delay);\n  // console.log('step', step);\n  // console.log('amount', amount);\n\n  for (let i = 0; i <= amount; i++) {\n    let delay = Number(step * i);\n    // console.log(`i= ${i}, delay= `, delay);\n\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${i} in ${delay}ms`);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ i, delay }) => {\n        console.log(`❌ Rejected promise ${i} in ${delay}ms`);\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","console","log","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","form","addEventListener","evt","position","delay2","Number","i1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","concat","$parcel$interopDefault","Notify","success","catch","i","failure","preventDefault","value","i11","_loop"],"version":3,"file":"03-promises.e88571d8.js.map"}