{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAAAC,QAAQC,IAAI,mBAEZ,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,KAAMJ,SAASC,cAAc,cAG/B,SAASI,EAAcC,EAAUP,GAC/B,OAAO,IAAIQ,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUP,IAEpBU,EAAO,C,SAAEH,E,MAAUP,GAAQ,GAE5BA,EAAM,G,CAIbD,EAAKM,KAAKU,iBAAiB,UAE3B,SAAiBC,GACfA,EAAIC,iBAEQlB,EAAKC,MAAMkB,MAAvB,IACIf,EAAOJ,EAAKI,KAAKe,MACjBd,EAASL,EAAKK,OAAOc,MAMzB,IAAK,IAAIC,EAAI,EAAGA,GAAKf,EAAQe,IAAK,CAChC,IAAIC,EAAQC,OAAOlB,EAAOgB,GAG1Bb,EAAca,EAAGC,GACdE,MAAK,EAACf,SAAEA,EAAQP,MAAEA,MACjBH,QAAQC,IAAI,uBAAqBqB,QAAUnB,OAC3CuB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBN,QAAUnB,MAAU,IAElE0B,OAAM,EAACC,EAAEA,EAAC3B,MAAEA,MACXH,QAAQC,IAAI,sBAAoB6B,QAAU3B,OAC1CuB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAoBD,QAAQ3B,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["console.log('faina_super_dog');\nimport Notiflix from 'notiflix';\nconst refs = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('form.form'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.form.addEventListener('submit', onStart);\n\nfunction onStart(evt) {\n  evt.preventDefault();\n\n  let delay = refs.delay.value;\n  let step = refs.step.value;\n  let amount = refs.amount.value;\n\n  // console.log('delay', delay);\n  // console.log('step', step);\n  // console.log('amount', amount);\n\n  for (let i = 0; i <= amount; i++) {\n    let delay = Number(step * i);\n    // console.log(`i= ${i}, delay= `, delay);\n\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${i} in ${delay}ms`);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ i, delay }) => {\n        console.log(`❌ Rejected promise ${i} in ${delay}ms`);\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","console","log","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","form","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","value","i1","delay1","Number","then","$parcel$interopDefault","Notify","success","catch","i","failure"],"version":3,"file":"03-promises.4f0bda4a.js.map"}